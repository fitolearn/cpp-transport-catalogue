// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: graph.proto

#include "graph.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace tc_serialize {
PROTOBUF_CONSTEXPR Coordinates::Coordinates(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.latitude_)*/0
  , /*decltype(_impl_.longitude_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CoordinatesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CoordinatesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CoordinatesDefaultTypeInternal() {}
  union {
    Coordinates _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CoordinatesDefaultTypeInternal _Coordinates_default_instance_;
PROTOBUF_CONSTEXPR Stop::Stop(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.coords_)*/nullptr
  , /*decltype(_impl_.id_stop_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StopDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopDefaultTypeInternal() {}
  union {
    Stop _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopDefaultTypeInternal _Stop_default_instance_;
PROTOBUF_CONSTEXPR StopsList::StopsList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.all_stops_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StopsListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopsListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopsListDefaultTypeInternal() {}
  union {
    StopsList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopsListDefaultTypeInternal _StopsList_default_instance_;
PROTOBUF_CONSTEXPR DistanceBetweenStops::DistanceBetweenStops(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.from_id_)*/0u
  , /*decltype(_impl_.to_id_)*/0u
  , /*decltype(_impl_.distance_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DistanceBetweenStopsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DistanceBetweenStopsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DistanceBetweenStopsDefaultTypeInternal() {}
  union {
    DistanceBetweenStops _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DistanceBetweenStopsDefaultTypeInternal _DistanceBetweenStops_default_instance_;
PROTOBUF_CONSTEXPR StopDistanceIndex::StopDistanceIndex(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.all_stops_distance_index_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StopDistanceIndexDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopDistanceIndexDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopDistanceIndexDefaultTypeInternal() {}
  union {
    StopDistanceIndex _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopDistanceIndexDefaultTypeInternal _StopDistanceIndex_default_instance_;
PROTOBUF_CONSTEXPR BusRoute::BusRoute(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.stop_ids_)*/{}
  , /*decltype(_impl_._stop_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.bus_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.route_type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BusRouteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BusRouteDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BusRouteDefaultTypeInternal() {}
  union {
    BusRoute _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BusRouteDefaultTypeInternal _BusRoute_default_instance_;
PROTOBUF_CONSTEXPR AllRoutesList::AllRoutesList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.routes_list_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AllRoutesListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AllRoutesListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AllRoutesListDefaultTypeInternal() {}
  union {
    AllRoutesList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AllRoutesListDefaultTypeInternal _AllRoutesList_default_instance_;
PROTOBUF_CONSTEXPR BaseSettings::BaseSettings(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.stops_list_)*/nullptr
  , /*decltype(_impl_.stop_dist_index_)*/nullptr
  , /*decltype(_impl_.all_routes_list_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BaseSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BaseSettingsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BaseSettingsDefaultTypeInternal() {}
  union {
    BaseSettings _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BaseSettingsDefaultTypeInternal _BaseSettings_default_instance_;
}  // namespace tc_serialize
static ::_pb::Metadata file_level_metadata_graph_2eproto[8];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_graph_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_graph_2eproto = nullptr;

const uint32_t TableStruct_graph_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tc_serialize::Coordinates, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tc_serialize::Coordinates, _impl_.latitude_),
  PROTOBUF_FIELD_OFFSET(::tc_serialize::Coordinates, _impl_.longitude_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tc_serialize::Stop, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tc_serialize::Stop, _impl_.id_stop_),
  PROTOBUF_FIELD_OFFSET(::tc_serialize::Stop, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::tc_serialize::Stop, _impl_.coords_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tc_serialize::StopsList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tc_serialize::StopsList, _impl_.all_stops_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tc_serialize::DistanceBetweenStops, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tc_serialize::DistanceBetweenStops, _impl_.from_id_),
  PROTOBUF_FIELD_OFFSET(::tc_serialize::DistanceBetweenStops, _impl_.to_id_),
  PROTOBUF_FIELD_OFFSET(::tc_serialize::DistanceBetweenStops, _impl_.distance_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tc_serialize::StopDistanceIndex, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tc_serialize::StopDistanceIndex, _impl_.all_stops_distance_index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tc_serialize::BusRoute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tc_serialize::BusRoute, _impl_.bus_name_),
  PROTOBUF_FIELD_OFFSET(::tc_serialize::BusRoute, _impl_.route_type_),
  PROTOBUF_FIELD_OFFSET(::tc_serialize::BusRoute, _impl_.stop_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tc_serialize::AllRoutesList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tc_serialize::AllRoutesList, _impl_.routes_list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tc_serialize::BaseSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tc_serialize::BaseSettings, _impl_.stops_list_),
  PROTOBUF_FIELD_OFFSET(::tc_serialize::BaseSettings, _impl_.stop_dist_index_),
  PROTOBUF_FIELD_OFFSET(::tc_serialize::BaseSettings, _impl_.all_routes_list_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::tc_serialize::Coordinates)},
  { 8, -1, -1, sizeof(::tc_serialize::Stop)},
  { 17, -1, -1, sizeof(::tc_serialize::StopsList)},
  { 24, -1, -1, sizeof(::tc_serialize::DistanceBetweenStops)},
  { 33, -1, -1, sizeof(::tc_serialize::StopDistanceIndex)},
  { 40, -1, -1, sizeof(::tc_serialize::BusRoute)},
  { 49, -1, -1, sizeof(::tc_serialize::AllRoutesList)},
  { 56, -1, -1, sizeof(::tc_serialize::BaseSettings)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::tc_serialize::_Coordinates_default_instance_._instance,
  &::tc_serialize::_Stop_default_instance_._instance,
  &::tc_serialize::_StopsList_default_instance_._instance,
  &::tc_serialize::_DistanceBetweenStops_default_instance_._instance,
  &::tc_serialize::_StopDistanceIndex_default_instance_._instance,
  &::tc_serialize::_BusRoute_default_instance_._instance,
  &::tc_serialize::_AllRoutesList_default_instance_._instance,
  &::tc_serialize::_BaseSettings_default_instance_._instance,
};

const char descriptor_table_protodef_graph_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013graph.proto\022\014tc_serialize\"2\n\013Coordinat"
  "es\022\020\n\010latitude\030\001 \001(\001\022\021\n\tlongitude\030\002 \001(\001\""
  "P\n\004Stop\022\017\n\007id_stop\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022)"
  "\n\006coords\030\003 \001(\0132\031.tc_serialize.Coordinate"
  "s\"2\n\tStopsList\022%\n\tall_stops\030\001 \003(\0132\022.tc_s"
  "erialize.Stop\"H\n\024DistanceBetweenStops\022\017\n"
  "\007from_id\030\001 \001(\r\022\r\n\005to_id\030\002 \001(\r\022\020\n\010distanc"
  "e\030\003 \001(\004\"Y\n\021StopDistanceIndex\022D\n\030all_stop"
  "s_distance_index\030\001 \003(\0132\".tc_serialize.Di"
  "stanceBetweenStops\"B\n\010BusRoute\022\020\n\010bus_na"
  "me\030\001 \001(\t\022\022\n\nroute_type\030\002 \001(\005\022\020\n\010stop_ids"
  "\030\003 \003(\r\"<\n\rAllRoutesList\022+\n\013routes_list\030\001"
  " \003(\0132\026.tc_serialize.BusRoute\"\253\001\n\014BaseSet"
  "tings\022+\n\nstops_list\030\001 \001(\0132\027.tc_serialize"
  ".StopsList\0228\n\017stop_dist_index\030\002 \001(\0132\037.tc"
  "_serialize.StopDistanceIndex\0224\n\017all_rout"
  "es_list\030\003 \001(\0132\033.tc_serialize.AllRoutesLi"
  "stb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_graph_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_graph_2eproto = {
    false, false, 690, descriptor_table_protodef_graph_2eproto,
    "graph.proto",
    &descriptor_table_graph_2eproto_once, nullptr, 0, 8,
    schemas, file_default_instances, TableStruct_graph_2eproto::offsets,
    file_level_metadata_graph_2eproto, file_level_enum_descriptors_graph_2eproto,
    file_level_service_descriptors_graph_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_graph_2eproto_getter() {
  return &descriptor_table_graph_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_graph_2eproto(&descriptor_table_graph_2eproto);
namespace tc_serialize {

// ===================================================================

class Coordinates::_Internal {
 public:
};

Coordinates::Coordinates(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tc_serialize.Coordinates)
}
Coordinates::Coordinates(const Coordinates& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Coordinates* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.latitude_){}
    , decltype(_impl_.longitude_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.latitude_, &from._impl_.latitude_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.longitude_) -
    reinterpret_cast<char*>(&_impl_.latitude_)) + sizeof(_impl_.longitude_));
  // @@protoc_insertion_point(copy_constructor:tc_serialize.Coordinates)
}

inline void Coordinates::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.latitude_){0}
    , decltype(_impl_.longitude_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Coordinates::~Coordinates() {
  // @@protoc_insertion_point(destructor:tc_serialize.Coordinates)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Coordinates::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Coordinates::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Coordinates::Clear() {
// @@protoc_insertion_point(message_clear_start:tc_serialize.Coordinates)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.latitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.longitude_) -
      reinterpret_cast<char*>(&_impl_.latitude_)) + sizeof(_impl_.longitude_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Coordinates::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double latitude = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _impl_.latitude_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double longitude = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _impl_.longitude_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Coordinates::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tc_serialize.Coordinates)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // double latitude = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_latitude = this->_internal_latitude();
  uint64_t raw_latitude;
  memcpy(&raw_latitude, &tmp_latitude, sizeof(tmp_latitude));
  if (raw_latitude != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_latitude(), target);
  }

  // double longitude = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_longitude = this->_internal_longitude();
  uint64_t raw_longitude;
  memcpy(&raw_longitude, &tmp_longitude, sizeof(tmp_longitude));
  if (raw_longitude != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_longitude(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tc_serialize.Coordinates)
  return target;
}

size_t Coordinates::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tc_serialize.Coordinates)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double latitude = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_latitude = this->_internal_latitude();
  uint64_t raw_latitude;
  memcpy(&raw_latitude, &tmp_latitude, sizeof(tmp_latitude));
  if (raw_latitude != 0) {
    total_size += 1 + 8;
  }

  // double longitude = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_longitude = this->_internal_longitude();
  uint64_t raw_longitude;
  memcpy(&raw_longitude, &tmp_longitude, sizeof(tmp_longitude));
  if (raw_longitude != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Coordinates::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Coordinates::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Coordinates::GetClassData() const { return &_class_data_; }


void Coordinates::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Coordinates*>(&to_msg);
  auto& from = static_cast<const Coordinates&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tc_serialize.Coordinates)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_latitude = from._internal_latitude();
  uint64_t raw_latitude;
  memcpy(&raw_latitude, &tmp_latitude, sizeof(tmp_latitude));
  if (raw_latitude != 0) {
    _this->_internal_set_latitude(from._internal_latitude());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_longitude = from._internal_longitude();
  uint64_t raw_longitude;
  memcpy(&raw_longitude, &tmp_longitude, sizeof(tmp_longitude));
  if (raw_longitude != 0) {
    _this->_internal_set_longitude(from._internal_longitude());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Coordinates::CopyFrom(const Coordinates& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tc_serialize.Coordinates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Coordinates::IsInitialized() const {
  return true;
}

void Coordinates::InternalSwap(Coordinates* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Coordinates, _impl_.longitude_)
      + sizeof(Coordinates::_impl_.longitude_)
      - PROTOBUF_FIELD_OFFSET(Coordinates, _impl_.latitude_)>(
          reinterpret_cast<char*>(&_impl_.latitude_),
          reinterpret_cast<char*>(&other->_impl_.latitude_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Coordinates::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_graph_2eproto_getter, &descriptor_table_graph_2eproto_once,
      file_level_metadata_graph_2eproto[0]);
}

// ===================================================================

class Stop::_Internal {
 public:
  static const ::tc_serialize::Coordinates& coords(const Stop* msg);
};

const ::tc_serialize::Coordinates&
Stop::_Internal::coords(const Stop* msg) {
  return *msg->_impl_.coords_;
}
Stop::Stop(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tc_serialize.Stop)
}
Stop::Stop(const Stop& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Stop* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.coords_){nullptr}
    , decltype(_impl_.id_stop_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_coords()) {
    _this->_impl_.coords_ = new ::tc_serialize::Coordinates(*from._impl_.coords_);
  }
  _this->_impl_.id_stop_ = from._impl_.id_stop_;
  // @@protoc_insertion_point(copy_constructor:tc_serialize.Stop)
}

inline void Stop::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.coords_){nullptr}
    , decltype(_impl_.id_stop_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Stop::~Stop() {
  // @@protoc_insertion_point(destructor:tc_serialize.Stop)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Stop::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.coords_;
}

void Stop::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Stop::Clear() {
// @@protoc_insertion_point(message_clear_start:tc_serialize.Stop)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.coords_ != nullptr) {
    delete _impl_.coords_;
  }
  _impl_.coords_ = nullptr;
  _impl_.id_stop_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Stop::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 id_stop = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_stop_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tc_serialize.Stop.name"));
        } else
          goto handle_unusual;
        continue;
      // .tc_serialize.Coordinates coords = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_coords(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Stop::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tc_serialize.Stop)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id_stop = 1;
  if (this->_internal_id_stop() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id_stop(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tc_serialize.Stop.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .tc_serialize.Coordinates coords = 3;
  if (this->_internal_has_coords()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::coords(this),
        _Internal::coords(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tc_serialize.Stop)
  return target;
}

size_t Stop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tc_serialize.Stop)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .tc_serialize.Coordinates coords = 3;
  if (this->_internal_has_coords()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.coords_);
  }

  // uint32 id_stop = 1;
  if (this->_internal_id_stop() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_id_stop());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Stop::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Stop::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Stop::GetClassData() const { return &_class_data_; }


void Stop::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Stop*>(&to_msg);
  auto& from = static_cast<const Stop&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tc_serialize.Stop)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_has_coords()) {
    _this->_internal_mutable_coords()->::tc_serialize::Coordinates::MergeFrom(
        from._internal_coords());
  }
  if (from._internal_id_stop() != 0) {
    _this->_internal_set_id_stop(from._internal_id_stop());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Stop::CopyFrom(const Stop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tc_serialize.Stop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stop::IsInitialized() const {
  return true;
}

void Stop::InternalSwap(Stop* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Stop, _impl_.id_stop_)
      + sizeof(Stop::_impl_.id_stop_)
      - PROTOBUF_FIELD_OFFSET(Stop, _impl_.coords_)>(
          reinterpret_cast<char*>(&_impl_.coords_),
          reinterpret_cast<char*>(&other->_impl_.coords_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Stop::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_graph_2eproto_getter, &descriptor_table_graph_2eproto_once,
      file_level_metadata_graph_2eproto[1]);
}

// ===================================================================

class StopsList::_Internal {
 public:
};

StopsList::StopsList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tc_serialize.StopsList)
}
StopsList::StopsList(const StopsList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StopsList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.all_stops_){from._impl_.all_stops_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tc_serialize.StopsList)
}

inline void StopsList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.all_stops_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StopsList::~StopsList() {
  // @@protoc_insertion_point(destructor:tc_serialize.StopsList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StopsList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.all_stops_.~RepeatedPtrField();
}

void StopsList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StopsList::Clear() {
// @@protoc_insertion_point(message_clear_start:tc_serialize.StopsList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.all_stops_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopsList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .tc_serialize.Stop all_stops = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_all_stops(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StopsList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tc_serialize.StopsList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tc_serialize.Stop all_stops = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_all_stops_size()); i < n; i++) {
    const auto& repfield = this->_internal_all_stops(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tc_serialize.StopsList)
  return target;
}

size_t StopsList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tc_serialize.StopsList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tc_serialize.Stop all_stops = 1;
  total_size += 1UL * this->_internal_all_stops_size();
  for (const auto& msg : this->_impl_.all_stops_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StopsList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StopsList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StopsList::GetClassData() const { return &_class_data_; }


void StopsList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StopsList*>(&to_msg);
  auto& from = static_cast<const StopsList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tc_serialize.StopsList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.all_stops_.MergeFrom(from._impl_.all_stops_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StopsList::CopyFrom(const StopsList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tc_serialize.StopsList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopsList::IsInitialized() const {
  return true;
}

void StopsList::InternalSwap(StopsList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.all_stops_.InternalSwap(&other->_impl_.all_stops_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopsList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_graph_2eproto_getter, &descriptor_table_graph_2eproto_once,
      file_level_metadata_graph_2eproto[2]);
}

// ===================================================================

class DistanceBetweenStops::_Internal {
 public:
};

DistanceBetweenStops::DistanceBetweenStops(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tc_serialize.DistanceBetweenStops)
}
DistanceBetweenStops::DistanceBetweenStops(const DistanceBetweenStops& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DistanceBetweenStops* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.from_id_){}
    , decltype(_impl_.to_id_){}
    , decltype(_impl_.distance_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.from_id_, &from._impl_.from_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.distance_) -
    reinterpret_cast<char*>(&_impl_.from_id_)) + sizeof(_impl_.distance_));
  // @@protoc_insertion_point(copy_constructor:tc_serialize.DistanceBetweenStops)
}

inline void DistanceBetweenStops::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.from_id_){0u}
    , decltype(_impl_.to_id_){0u}
    , decltype(_impl_.distance_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DistanceBetweenStops::~DistanceBetweenStops() {
  // @@protoc_insertion_point(destructor:tc_serialize.DistanceBetweenStops)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DistanceBetweenStops::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DistanceBetweenStops::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DistanceBetweenStops::Clear() {
// @@protoc_insertion_point(message_clear_start:tc_serialize.DistanceBetweenStops)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.from_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.distance_) -
      reinterpret_cast<char*>(&_impl_.from_id_)) + sizeof(_impl_.distance_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DistanceBetweenStops::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 from_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.from_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 to_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.to_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 distance = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.distance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DistanceBetweenStops::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tc_serialize.DistanceBetweenStops)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 from_id = 1;
  if (this->_internal_from_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_from_id(), target);
  }

  // uint32 to_id = 2;
  if (this->_internal_to_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_to_id(), target);
  }

  // uint64 distance = 3;
  if (this->_internal_distance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_distance(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tc_serialize.DistanceBetweenStops)
  return target;
}

size_t DistanceBetweenStops::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tc_serialize.DistanceBetweenStops)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 from_id = 1;
  if (this->_internal_from_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_from_id());
  }

  // uint32 to_id = 2;
  if (this->_internal_to_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_to_id());
  }

  // uint64 distance = 3;
  if (this->_internal_distance() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_distance());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DistanceBetweenStops::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DistanceBetweenStops::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DistanceBetweenStops::GetClassData() const { return &_class_data_; }


void DistanceBetweenStops::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DistanceBetweenStops*>(&to_msg);
  auto& from = static_cast<const DistanceBetweenStops&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tc_serialize.DistanceBetweenStops)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_from_id() != 0) {
    _this->_internal_set_from_id(from._internal_from_id());
  }
  if (from._internal_to_id() != 0) {
    _this->_internal_set_to_id(from._internal_to_id());
  }
  if (from._internal_distance() != 0) {
    _this->_internal_set_distance(from._internal_distance());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DistanceBetweenStops::CopyFrom(const DistanceBetweenStops& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tc_serialize.DistanceBetweenStops)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DistanceBetweenStops::IsInitialized() const {
  return true;
}

void DistanceBetweenStops::InternalSwap(DistanceBetweenStops* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DistanceBetweenStops, _impl_.distance_)
      + sizeof(DistanceBetweenStops::_impl_.distance_)
      - PROTOBUF_FIELD_OFFSET(DistanceBetweenStops, _impl_.from_id_)>(
          reinterpret_cast<char*>(&_impl_.from_id_),
          reinterpret_cast<char*>(&other->_impl_.from_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DistanceBetweenStops::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_graph_2eproto_getter, &descriptor_table_graph_2eproto_once,
      file_level_metadata_graph_2eproto[3]);
}

// ===================================================================

class StopDistanceIndex::_Internal {
 public:
};

StopDistanceIndex::StopDistanceIndex(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tc_serialize.StopDistanceIndex)
}
StopDistanceIndex::StopDistanceIndex(const StopDistanceIndex& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StopDistanceIndex* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.all_stops_distance_index_){from._impl_.all_stops_distance_index_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tc_serialize.StopDistanceIndex)
}

inline void StopDistanceIndex::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.all_stops_distance_index_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StopDistanceIndex::~StopDistanceIndex() {
  // @@protoc_insertion_point(destructor:tc_serialize.StopDistanceIndex)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StopDistanceIndex::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.all_stops_distance_index_.~RepeatedPtrField();
}

void StopDistanceIndex::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StopDistanceIndex::Clear() {
// @@protoc_insertion_point(message_clear_start:tc_serialize.StopDistanceIndex)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.all_stops_distance_index_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopDistanceIndex::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .tc_serialize.DistanceBetweenStops all_stops_distance_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_all_stops_distance_index(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StopDistanceIndex::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tc_serialize.StopDistanceIndex)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tc_serialize.DistanceBetweenStops all_stops_distance_index = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_all_stops_distance_index_size()); i < n; i++) {
    const auto& repfield = this->_internal_all_stops_distance_index(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tc_serialize.StopDistanceIndex)
  return target;
}

size_t StopDistanceIndex::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tc_serialize.StopDistanceIndex)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tc_serialize.DistanceBetweenStops all_stops_distance_index = 1;
  total_size += 1UL * this->_internal_all_stops_distance_index_size();
  for (const auto& msg : this->_impl_.all_stops_distance_index_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StopDistanceIndex::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StopDistanceIndex::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StopDistanceIndex::GetClassData() const { return &_class_data_; }


void StopDistanceIndex::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StopDistanceIndex*>(&to_msg);
  auto& from = static_cast<const StopDistanceIndex&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tc_serialize.StopDistanceIndex)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.all_stops_distance_index_.MergeFrom(from._impl_.all_stops_distance_index_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StopDistanceIndex::CopyFrom(const StopDistanceIndex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tc_serialize.StopDistanceIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopDistanceIndex::IsInitialized() const {
  return true;
}

void StopDistanceIndex::InternalSwap(StopDistanceIndex* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.all_stops_distance_index_.InternalSwap(&other->_impl_.all_stops_distance_index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopDistanceIndex::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_graph_2eproto_getter, &descriptor_table_graph_2eproto_once,
      file_level_metadata_graph_2eproto[4]);
}

// ===================================================================

class BusRoute::_Internal {
 public:
};

BusRoute::BusRoute(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tc_serialize.BusRoute)
}
BusRoute::BusRoute(const BusRoute& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BusRoute* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.stop_ids_){from._impl_.stop_ids_}
    , /*decltype(_impl_._stop_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.bus_name_){}
    , decltype(_impl_.route_type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.bus_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bus_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_bus_name().empty()) {
    _this->_impl_.bus_name_.Set(from._internal_bus_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.route_type_ = from._impl_.route_type_;
  // @@protoc_insertion_point(copy_constructor:tc_serialize.BusRoute)
}

inline void BusRoute::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.stop_ids_){arena}
    , /*decltype(_impl_._stop_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.bus_name_){}
    , decltype(_impl_.route_type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.bus_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bus_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BusRoute::~BusRoute() {
  // @@protoc_insertion_point(destructor:tc_serialize.BusRoute)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BusRoute::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.stop_ids_.~RepeatedField();
  _impl_.bus_name_.Destroy();
}

void BusRoute::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BusRoute::Clear() {
// @@protoc_insertion_point(message_clear_start:tc_serialize.BusRoute)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stop_ids_.Clear();
  _impl_.bus_name_.ClearToEmpty();
  _impl_.route_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BusRoute::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string bus_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_bus_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tc_serialize.BusRoute.bus_name"));
        } else
          goto handle_unusual;
        continue;
      // int32 route_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.route_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 stop_ids = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_stop_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_stop_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BusRoute::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tc_serialize.BusRoute)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string bus_name = 1;
  if (!this->_internal_bus_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bus_name().data(), static_cast<int>(this->_internal_bus_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tc_serialize.BusRoute.bus_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_bus_name(), target);
  }

  // int32 route_type = 2;
  if (this->_internal_route_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_route_type(), target);
  }

  // repeated uint32 stop_ids = 3;
  {
    int byte_size = _impl_._stop_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          3, _internal_stop_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tc_serialize.BusRoute)
  return target;
}

size_t BusRoute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tc_serialize.BusRoute)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 stop_ids = 3;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.stop_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._stop_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string bus_name = 1;
  if (!this->_internal_bus_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bus_name());
  }

  // int32 route_type = 2;
  if (this->_internal_route_type() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_route_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BusRoute::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BusRoute::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BusRoute::GetClassData() const { return &_class_data_; }


void BusRoute::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BusRoute*>(&to_msg);
  auto& from = static_cast<const BusRoute&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tc_serialize.BusRoute)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.stop_ids_.MergeFrom(from._impl_.stop_ids_);
  if (!from._internal_bus_name().empty()) {
    _this->_internal_set_bus_name(from._internal_bus_name());
  }
  if (from._internal_route_type() != 0) {
    _this->_internal_set_route_type(from._internal_route_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BusRoute::CopyFrom(const BusRoute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tc_serialize.BusRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BusRoute::IsInitialized() const {
  return true;
}

void BusRoute::InternalSwap(BusRoute* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.stop_ids_.InternalSwap(&other->_impl_.stop_ids_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.bus_name_, lhs_arena,
      &other->_impl_.bus_name_, rhs_arena
  );
  swap(_impl_.route_type_, other->_impl_.route_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BusRoute::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_graph_2eproto_getter, &descriptor_table_graph_2eproto_once,
      file_level_metadata_graph_2eproto[5]);
}

// ===================================================================

class AllRoutesList::_Internal {
 public:
};

AllRoutesList::AllRoutesList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tc_serialize.AllRoutesList)
}
AllRoutesList::AllRoutesList(const AllRoutesList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AllRoutesList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.routes_list_){from._impl_.routes_list_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tc_serialize.AllRoutesList)
}

inline void AllRoutesList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.routes_list_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AllRoutesList::~AllRoutesList() {
  // @@protoc_insertion_point(destructor:tc_serialize.AllRoutesList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AllRoutesList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.routes_list_.~RepeatedPtrField();
}

void AllRoutesList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AllRoutesList::Clear() {
// @@protoc_insertion_point(message_clear_start:tc_serialize.AllRoutesList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.routes_list_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AllRoutesList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .tc_serialize.BusRoute routes_list = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_routes_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AllRoutesList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tc_serialize.AllRoutesList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tc_serialize.BusRoute routes_list = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_routes_list_size()); i < n; i++) {
    const auto& repfield = this->_internal_routes_list(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tc_serialize.AllRoutesList)
  return target;
}

size_t AllRoutesList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tc_serialize.AllRoutesList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tc_serialize.BusRoute routes_list = 1;
  total_size += 1UL * this->_internal_routes_list_size();
  for (const auto& msg : this->_impl_.routes_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AllRoutesList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AllRoutesList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AllRoutesList::GetClassData() const { return &_class_data_; }


void AllRoutesList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AllRoutesList*>(&to_msg);
  auto& from = static_cast<const AllRoutesList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tc_serialize.AllRoutesList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.routes_list_.MergeFrom(from._impl_.routes_list_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AllRoutesList::CopyFrom(const AllRoutesList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tc_serialize.AllRoutesList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllRoutesList::IsInitialized() const {
  return true;
}

void AllRoutesList::InternalSwap(AllRoutesList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.routes_list_.InternalSwap(&other->_impl_.routes_list_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AllRoutesList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_graph_2eproto_getter, &descriptor_table_graph_2eproto_once,
      file_level_metadata_graph_2eproto[6]);
}

// ===================================================================

class BaseSettings::_Internal {
 public:
  static const ::tc_serialize::StopsList& stops_list(const BaseSettings* msg);
  static const ::tc_serialize::StopDistanceIndex& stop_dist_index(const BaseSettings* msg);
  static const ::tc_serialize::AllRoutesList& all_routes_list(const BaseSettings* msg);
};

const ::tc_serialize::StopsList&
BaseSettings::_Internal::stops_list(const BaseSettings* msg) {
  return *msg->_impl_.stops_list_;
}
const ::tc_serialize::StopDistanceIndex&
BaseSettings::_Internal::stop_dist_index(const BaseSettings* msg) {
  return *msg->_impl_.stop_dist_index_;
}
const ::tc_serialize::AllRoutesList&
BaseSettings::_Internal::all_routes_list(const BaseSettings* msg) {
  return *msg->_impl_.all_routes_list_;
}
BaseSettings::BaseSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tc_serialize.BaseSettings)
}
BaseSettings::BaseSettings(const BaseSettings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BaseSettings* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.stops_list_){nullptr}
    , decltype(_impl_.stop_dist_index_){nullptr}
    , decltype(_impl_.all_routes_list_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_stops_list()) {
    _this->_impl_.stops_list_ = new ::tc_serialize::StopsList(*from._impl_.stops_list_);
  }
  if (from._internal_has_stop_dist_index()) {
    _this->_impl_.stop_dist_index_ = new ::tc_serialize::StopDistanceIndex(*from._impl_.stop_dist_index_);
  }
  if (from._internal_has_all_routes_list()) {
    _this->_impl_.all_routes_list_ = new ::tc_serialize::AllRoutesList(*from._impl_.all_routes_list_);
  }
  // @@protoc_insertion_point(copy_constructor:tc_serialize.BaseSettings)
}

inline void BaseSettings::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.stops_list_){nullptr}
    , decltype(_impl_.stop_dist_index_){nullptr}
    , decltype(_impl_.all_routes_list_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BaseSettings::~BaseSettings() {
  // @@protoc_insertion_point(destructor:tc_serialize.BaseSettings)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BaseSettings::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.stops_list_;
  if (this != internal_default_instance()) delete _impl_.stop_dist_index_;
  if (this != internal_default_instance()) delete _impl_.all_routes_list_;
}

void BaseSettings::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BaseSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:tc_serialize.BaseSettings)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.stops_list_ != nullptr) {
    delete _impl_.stops_list_;
  }
  _impl_.stops_list_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.stop_dist_index_ != nullptr) {
    delete _impl_.stop_dist_index_;
  }
  _impl_.stop_dist_index_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.all_routes_list_ != nullptr) {
    delete _impl_.all_routes_list_;
  }
  _impl_.all_routes_list_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BaseSettings::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .tc_serialize.StopsList stops_list = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_stops_list(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tc_serialize.StopDistanceIndex stop_dist_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_stop_dist_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tc_serialize.AllRoutesList all_routes_list = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_all_routes_list(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BaseSettings::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tc_serialize.BaseSettings)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .tc_serialize.StopsList stops_list = 1;
  if (this->_internal_has_stops_list()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::stops_list(this),
        _Internal::stops_list(this).GetCachedSize(), target, stream);
  }

  // .tc_serialize.StopDistanceIndex stop_dist_index = 2;
  if (this->_internal_has_stop_dist_index()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::stop_dist_index(this),
        _Internal::stop_dist_index(this).GetCachedSize(), target, stream);
  }

  // .tc_serialize.AllRoutesList all_routes_list = 3;
  if (this->_internal_has_all_routes_list()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::all_routes_list(this),
        _Internal::all_routes_list(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tc_serialize.BaseSettings)
  return target;
}

size_t BaseSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tc_serialize.BaseSettings)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .tc_serialize.StopsList stops_list = 1;
  if (this->_internal_has_stops_list()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.stops_list_);
  }

  // .tc_serialize.StopDistanceIndex stop_dist_index = 2;
  if (this->_internal_has_stop_dist_index()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.stop_dist_index_);
  }

  // .tc_serialize.AllRoutesList all_routes_list = 3;
  if (this->_internal_has_all_routes_list()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.all_routes_list_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BaseSettings::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BaseSettings::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BaseSettings::GetClassData() const { return &_class_data_; }


void BaseSettings::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BaseSettings*>(&to_msg);
  auto& from = static_cast<const BaseSettings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tc_serialize.BaseSettings)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_stops_list()) {
    _this->_internal_mutable_stops_list()->::tc_serialize::StopsList::MergeFrom(
        from._internal_stops_list());
  }
  if (from._internal_has_stop_dist_index()) {
    _this->_internal_mutable_stop_dist_index()->::tc_serialize::StopDistanceIndex::MergeFrom(
        from._internal_stop_dist_index());
  }
  if (from._internal_has_all_routes_list()) {
    _this->_internal_mutable_all_routes_list()->::tc_serialize::AllRoutesList::MergeFrom(
        from._internal_all_routes_list());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BaseSettings::CopyFrom(const BaseSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tc_serialize.BaseSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseSettings::IsInitialized() const {
  return true;
}

void BaseSettings::InternalSwap(BaseSettings* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BaseSettings, _impl_.all_routes_list_)
      + sizeof(BaseSettings::_impl_.all_routes_list_)
      - PROTOBUF_FIELD_OFFSET(BaseSettings, _impl_.stops_list_)>(
          reinterpret_cast<char*>(&_impl_.stops_list_),
          reinterpret_cast<char*>(&other->_impl_.stops_list_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BaseSettings::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_graph_2eproto_getter, &descriptor_table_graph_2eproto_once,
      file_level_metadata_graph_2eproto[7]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace tc_serialize
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tc_serialize::Coordinates*
Arena::CreateMaybeMessage< ::tc_serialize::Coordinates >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tc_serialize::Coordinates >(arena);
}
template<> PROTOBUF_NOINLINE ::tc_serialize::Stop*
Arena::CreateMaybeMessage< ::tc_serialize::Stop >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tc_serialize::Stop >(arena);
}
template<> PROTOBUF_NOINLINE ::tc_serialize::StopsList*
Arena::CreateMaybeMessage< ::tc_serialize::StopsList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tc_serialize::StopsList >(arena);
}
template<> PROTOBUF_NOINLINE ::tc_serialize::DistanceBetweenStops*
Arena::CreateMaybeMessage< ::tc_serialize::DistanceBetweenStops >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tc_serialize::DistanceBetweenStops >(arena);
}
template<> PROTOBUF_NOINLINE ::tc_serialize::StopDistanceIndex*
Arena::CreateMaybeMessage< ::tc_serialize::StopDistanceIndex >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tc_serialize::StopDistanceIndex >(arena);
}
template<> PROTOBUF_NOINLINE ::tc_serialize::BusRoute*
Arena::CreateMaybeMessage< ::tc_serialize::BusRoute >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tc_serialize::BusRoute >(arena);
}
template<> PROTOBUF_NOINLINE ::tc_serialize::AllRoutesList*
Arena::CreateMaybeMessage< ::tc_serialize::AllRoutesList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tc_serialize::AllRoutesList >(arena);
}
template<> PROTOBUF_NOINLINE ::tc_serialize::BaseSettings*
Arena::CreateMaybeMessage< ::tc_serialize::BaseSettings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tc_serialize::BaseSettings >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
