// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: transport_catalogue.proto

#include "transport_catalogue.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace tc_serialize {
PROTOBUF_CONSTEXPR TransportCatalogue::TransportCatalogue(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.render_settings_)*/nullptr
  , /*decltype(_impl_.base_settings_)*/nullptr
  , /*decltype(_impl_.router_settings_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TransportCatalogueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransportCatalogueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransportCatalogueDefaultTypeInternal() {}
  union {
    TransportCatalogue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransportCatalogueDefaultTypeInternal _TransportCatalogue_default_instance_;
}  // namespace tc_serialize
static ::_pb::Metadata file_level_metadata_transport_5fcatalogue_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_transport_5fcatalogue_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_transport_5fcatalogue_2eproto = nullptr;

const uint32_t TableStruct_transport_5fcatalogue_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tc_serialize::TransportCatalogue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tc_serialize::TransportCatalogue, _impl_.render_settings_),
  PROTOBUF_FIELD_OFFSET(::tc_serialize::TransportCatalogue, _impl_.base_settings_),
  PROTOBUF_FIELD_OFFSET(::tc_serialize::TransportCatalogue, _impl_.router_settings_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::tc_serialize::TransportCatalogue)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::tc_serialize::_TransportCatalogue_default_instance_._instance,
};

const char descriptor_table_protodef_transport_5fcatalogue_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\031transport_catalogue.proto\022\014tc_serializ"
  "e\032\013graph.proto\032\tsvg.proto\032\022map_renderer."
  "proto\032\026transport_router.proto\"\272\001\n\022Transp"
  "ortCatalogue\0225\n\017render_settings\030\001 \001(\0132\034."
  "tc_serialize.RenderSettings\0221\n\rbase_sett"
  "ings\030\002 \001(\0132\032.tc_serialize.BaseSettings\022:"
  "\n\017router_settings\030\003 \001(\0132!.tc_serialize.G"
  "raphRouterSettingsb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_transport_5fcatalogue_2eproto_deps[4] = {
  &::descriptor_table_graph_2eproto,
  &::descriptor_table_map_5frenderer_2eproto,
  &::descriptor_table_svg_2eproto,
  &::descriptor_table_transport_5frouter_2eproto,
};
static ::_pbi::once_flag descriptor_table_transport_5fcatalogue_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_transport_5fcatalogue_2eproto = {
    false, false, 306, descriptor_table_protodef_transport_5fcatalogue_2eproto,
    "transport_catalogue.proto",
    &descriptor_table_transport_5fcatalogue_2eproto_once, descriptor_table_transport_5fcatalogue_2eproto_deps, 4, 1,
    schemas, file_default_instances, TableStruct_transport_5fcatalogue_2eproto::offsets,
    file_level_metadata_transport_5fcatalogue_2eproto, file_level_enum_descriptors_transport_5fcatalogue_2eproto,
    file_level_service_descriptors_transport_5fcatalogue_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_transport_5fcatalogue_2eproto_getter() {
  return &descriptor_table_transport_5fcatalogue_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_transport_5fcatalogue_2eproto(&descriptor_table_transport_5fcatalogue_2eproto);
namespace tc_serialize {

// ===================================================================

class TransportCatalogue::_Internal {
 public:
  static const ::tc_serialize::RenderSettings& render_settings(const TransportCatalogue* msg);
  static const ::tc_serialize::BaseSettings& base_settings(const TransportCatalogue* msg);
  static const ::tc_serialize::GraphRouterSettings& router_settings(const TransportCatalogue* msg);
};

const ::tc_serialize::RenderSettings&
TransportCatalogue::_Internal::render_settings(const TransportCatalogue* msg) {
  return *msg->_impl_.render_settings_;
}
const ::tc_serialize::BaseSettings&
TransportCatalogue::_Internal::base_settings(const TransportCatalogue* msg) {
  return *msg->_impl_.base_settings_;
}
const ::tc_serialize::GraphRouterSettings&
TransportCatalogue::_Internal::router_settings(const TransportCatalogue* msg) {
  return *msg->_impl_.router_settings_;
}
void TransportCatalogue::clear_render_settings() {
  if (GetArenaForAllocation() == nullptr && _impl_.render_settings_ != nullptr) {
    delete _impl_.render_settings_;
  }
  _impl_.render_settings_ = nullptr;
}
void TransportCatalogue::clear_base_settings() {
  if (GetArenaForAllocation() == nullptr && _impl_.base_settings_ != nullptr) {
    delete _impl_.base_settings_;
  }
  _impl_.base_settings_ = nullptr;
}
void TransportCatalogue::clear_router_settings() {
  if (GetArenaForAllocation() == nullptr && _impl_.router_settings_ != nullptr) {
    delete _impl_.router_settings_;
  }
  _impl_.router_settings_ = nullptr;
}
TransportCatalogue::TransportCatalogue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tc_serialize.TransportCatalogue)
}
TransportCatalogue::TransportCatalogue(const TransportCatalogue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransportCatalogue* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.render_settings_){nullptr}
    , decltype(_impl_.base_settings_){nullptr}
    , decltype(_impl_.router_settings_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_render_settings()) {
    _this->_impl_.render_settings_ = new ::tc_serialize::RenderSettings(*from._impl_.render_settings_);
  }
  if (from._internal_has_base_settings()) {
    _this->_impl_.base_settings_ = new ::tc_serialize::BaseSettings(*from._impl_.base_settings_);
  }
  if (from._internal_has_router_settings()) {
    _this->_impl_.router_settings_ = new ::tc_serialize::GraphRouterSettings(*from._impl_.router_settings_);
  }
  // @@protoc_insertion_point(copy_constructor:tc_serialize.TransportCatalogue)
}

inline void TransportCatalogue::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.render_settings_){nullptr}
    , decltype(_impl_.base_settings_){nullptr}
    , decltype(_impl_.router_settings_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TransportCatalogue::~TransportCatalogue() {
  // @@protoc_insertion_point(destructor:tc_serialize.TransportCatalogue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransportCatalogue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.render_settings_;
  if (this != internal_default_instance()) delete _impl_.base_settings_;
  if (this != internal_default_instance()) delete _impl_.router_settings_;
}

void TransportCatalogue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransportCatalogue::Clear() {
// @@protoc_insertion_point(message_clear_start:tc_serialize.TransportCatalogue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.render_settings_ != nullptr) {
    delete _impl_.render_settings_;
  }
  _impl_.render_settings_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.base_settings_ != nullptr) {
    delete _impl_.base_settings_;
  }
  _impl_.base_settings_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.router_settings_ != nullptr) {
    delete _impl_.router_settings_;
  }
  _impl_.router_settings_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransportCatalogue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .tc_serialize.RenderSettings render_settings = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_render_settings(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tc_serialize.BaseSettings base_settings = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_base_settings(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tc_serialize.GraphRouterSettings router_settings = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_router_settings(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransportCatalogue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tc_serialize.TransportCatalogue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .tc_serialize.RenderSettings render_settings = 1;
  if (this->_internal_has_render_settings()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::render_settings(this),
        _Internal::render_settings(this).GetCachedSize(), target, stream);
  }

  // .tc_serialize.BaseSettings base_settings = 2;
  if (this->_internal_has_base_settings()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::base_settings(this),
        _Internal::base_settings(this).GetCachedSize(), target, stream);
  }

  // .tc_serialize.GraphRouterSettings router_settings = 3;
  if (this->_internal_has_router_settings()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::router_settings(this),
        _Internal::router_settings(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tc_serialize.TransportCatalogue)
  return target;
}

size_t TransportCatalogue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tc_serialize.TransportCatalogue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .tc_serialize.RenderSettings render_settings = 1;
  if (this->_internal_has_render_settings()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.render_settings_);
  }

  // .tc_serialize.BaseSettings base_settings = 2;
  if (this->_internal_has_base_settings()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_settings_);
  }

  // .tc_serialize.GraphRouterSettings router_settings = 3;
  if (this->_internal_has_router_settings()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.router_settings_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransportCatalogue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransportCatalogue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransportCatalogue::GetClassData() const { return &_class_data_; }


void TransportCatalogue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransportCatalogue*>(&to_msg);
  auto& from = static_cast<const TransportCatalogue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tc_serialize.TransportCatalogue)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_render_settings()) {
    _this->_internal_mutable_render_settings()->::tc_serialize::RenderSettings::MergeFrom(
        from._internal_render_settings());
  }
  if (from._internal_has_base_settings()) {
    _this->_internal_mutable_base_settings()->::tc_serialize::BaseSettings::MergeFrom(
        from._internal_base_settings());
  }
  if (from._internal_has_router_settings()) {
    _this->_internal_mutable_router_settings()->::tc_serialize::GraphRouterSettings::MergeFrom(
        from._internal_router_settings());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransportCatalogue::CopyFrom(const TransportCatalogue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tc_serialize.TransportCatalogue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransportCatalogue::IsInitialized() const {
  return true;
}

void TransportCatalogue::InternalSwap(TransportCatalogue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TransportCatalogue, _impl_.router_settings_)
      + sizeof(TransportCatalogue::_impl_.router_settings_)
      - PROTOBUF_FIELD_OFFSET(TransportCatalogue, _impl_.render_settings_)>(
          reinterpret_cast<char*>(&_impl_.render_settings_),
          reinterpret_cast<char*>(&other->_impl_.render_settings_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TransportCatalogue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transport_5fcatalogue_2eproto_getter, &descriptor_table_transport_5fcatalogue_2eproto_once,
      file_level_metadata_transport_5fcatalogue_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace tc_serialize
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tc_serialize::TransportCatalogue*
Arena::CreateMaybeMessage< ::tc_serialize::TransportCatalogue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tc_serialize::TransportCatalogue >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
